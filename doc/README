######################################################################
############################ Instructions ############################

constants backed up here
    /afs/cern.ch/cms/ECAL/ECAL_DB_BACKUP

#############################################################################
############################ Prepare environment ############################

to install
cvs co -r V00-12-25 CalibCalorimetry/EcalTrivialCondModules
cvs co CondTools/Ecal
cvs co -d EcalValidation/EcalAlignment/ UserCode/Bicocca/EcalValidation/EcalAlignment/
cmsenv
scramv1 b


######################################################################################
############################ Use RAW-RECO without RE-RECO ############################

cd EcalValidation/EcalAlignment/test/
cmsRun Validation_2012_useReco_cfg.py

cd EcalValidation/EcalAlignment/test/crab/
crab_validation_useReco.cfg
multicrab -create -cfg multicrab_useReco.cfg
multicrab -submit
multicrab -status
multicrab -get


################################################################
############################ Use MC ############################

FIXME!!!!!!!!!



###########################################################################
############################ Old alignment TAG ############################

cd EcalValidation/EcalAlignment/test/crab/
multicrab -create --cfg multicrab_old_tag.cfg

*** modify in multicrab_####_#### directory the file multicrab.cfg
*** and run
*** multicrab -status
*** or

multicrab -getoutput

multicrab -report

hadd EcalAlignmentOldJoin.root RawRecoRealign_Old_Align/*/res/EcalAlignment_*

lumiCalc.py -c frontier://LumiProd/CMS_LUMI_PROD -i test/collision11.json recorded


###############################################################
#### not needed any more #### can be used as a cross check ####
############################ Default alignment 0 ############################
### 
### 1) create reconstruction with 0 alignment
### 
###     crab -create -cfg crab_validation_simpleNtpleDATA_WZ_Filter_NoAlign.cfg
### 
###     crab -submit -c Run2010B-EGMWZFilter-v2_RAWRECO_NoAlign
### 
###     That will store data (ROOT trees with electrons) (see [1.1] for Castor usage; default "getoutput" usage)
### 
###     crab -status -c Run2010B-EGMWZFilter-v2_RAWRECO_NoAlign
### 
###     crab -getoutput -c Run2010B-EGMWZFilter-v2_RAWRECO_NoAlign
### 
###     crab -report -c Run2010B-EGMWZFilter-v2_RAWRECO_NoAlign
### 
###  and join output tree
### 
###     hadd EcalAlignmentJoin.root Run2010B-EGMWZFilter-v2_RAWRECO_NoAlign/res/EcalAlignment_*
### 


########################################################################################################
############################ Calculate alignment coefficients and create DB ############################


Copy data from EOS
    eoscms ls -alrth  /eos/cms/store/caf/user/amassiro/ECALAlignment/08Nov2012/Run2012B/
    eoscms cp  /eos/cms/store/caf/user/amassiro/ECALAlignment/08Nov2012/Run2012B/E*.root /tmp/amassiro/Run2012B/
    hadd /tmp/amassiro/Run2012B_OldECAL_NewTrk.root /tmp/amassiro/Run2012B/E*.root
    

2) Do Alignment:
     EE_Alignment_RotoTraslation AlignEE_cfg.py
     EB_Alignment_RotoTraslation AlignEB_cfg.py
  NB: remember to modify output "txt" file in "Align_cfg.py" to deal with EE and EB 
      (or to use "AlignEE_cfg.py" and "AlignEB_cfg.py"
  Time ~ 10 minutes (it depends on the number of electrons)

  In "Align_cfg.py" enable/disable rotations and traslations

  To test on the even and odd events in the dataset (estimation of statistic error on results)
   EE_Alignment_RotoTraslation AlignEE_Even_cfg.py
   EE_Alignment_RotoTraslation AlignEE_Odd_cfg.py
   EB_Alignment_RotoTraslation AlignEB_Even_cfg.py
   EB_Alignment_RotoTraslation AlignEB_Odd_cfg.py
  The whole procedure takes about 3 minutes.

  To test on the eletron and positrons (estimation of systematic error on results)
   EB_Alignment_RotoTraslation AlignEB_EPlus_cfg.py
   EB_Alignment_RotoTraslation AlignEB_EMinus_cfg.py
   EE_Alignment_RotoTraslation AlignEE_EPlus_cfg.py
   EE_Alignment_RotoTraslation AlignEE_EMinus_cfg.py


2.a) combine alignment
$CMSSW_RELEASE_BASE/python/CondTools/Ecal/EcalCondDB.py -c oracle://cms_orcoff_prod/CMS_COND_34X_ECAL   -t EEAlignment_measured_v04_offline --listiovs

CombineRotoTraslations /afs/cern.ch/user/a/amassiro/public/ECAL_Alignment/1Mar2011/myEEAlignment_2010.txt   myEEAlignment_2011.txt    myEEAlignment_2011_combined.txt
CombineRotoTraslations /afs/cern.ch/user/a/amassiro/public/ECAL_Alignment/1Mar2011/myEBAlignment_2010.txt   myEBAlignment_2011.txt    myEBAlignment_2011_combined.txt


CombineRotoTraslations /afs/cern.ch/user/a/amassiro/public/ECAL_Alignment/21Nov2012//myEEAlignment_2012.txt   myEEAlignment_2012_withRotations_new2012MCbias.txt     myEEAlignment_2013_combined.txt
CombineRotoTraslations /afs/cern.ch/user/a/amassiro/public/ECAL_Alignment/21Nov2012//myEBAlignment_2012.txt   myEBAlignment_2012_new2012MCbias.txt                   myEBAlignment_2013_combined.txt


CombineRotoTraslations /afs/cern.ch/user/a/amassiro/public/ECAL_Alignment/21Nov2012//myEEAlignment_2012.txt   myEEAlignment_2012_withRotations_new2012MCbias_RunC.txt   myEEAlignment_2013_combined_runC.txt
CombineRotoTraslations /afs/cern.ch/user/a/amassiro/public/ECAL_Alignment/21Nov2012//myEBAlignment_2012.txt   myEBAlignment_2012_new2012MCbias_RunC.txt                 myEBAlignment_2013_combined_runC.txt




CombineRotoTraslations  /afs/cern.ch/user/a/amassiro/public/ECAL_Alignment/9Aug2011/myEBAlignment_2011_combined.txt    myEBAlignment_2011_new2011MCbias_reprocessing.txt      myEBAlignment_2011_combined.txt
CombineRotoTraslations  /afs/cern.ch/user/a/amassiro/public/ECAL_Alignment/9Aug2011/myEEAlignment_2011_combined.txt    myEEAlignment_2011_withRotations_new2011MCbias_reprocessing.txt      myEEAlignment_2011_combined.txt




3) create new local DB with new alignment constants
  check the consistence of output name in "Align_cfg.py" and input name in "EcalTrivialAlignment_cfi.py"
  (remember absolute path for "EBAlignmentFile", "EEAlignmentFile", "ESAlignmentFile" as in the example)
    cmsRun copyFileAlignEE_cfg.py 
    cmsRun copyFileAlignEB_cfg.py 
   
   (http://cmslxr.fnal.gov/lxr/source/CalibCalorimetry/EcalTrivialCondModules/src/EcalTrivialConditionRetriever.cc
   
   2580     EEDetId eedetId(ix, iy, side);
2581     if(getEEAlignmentFromFile_) {
2582       f >> myeuler[0] >> myeuler[1] >> myeuler[2] >> mytrans[0] >> mytrans[1] >> mytrans[2];
2583       std::cout << " translation " << mytrans[0] << " " << mytrans[1] << " " << mytrans[2] << "\n" 
2584            << " euler " << myeuler[0] << " " << myeuler[1] << " " << myeuler[2] << std::endl;
2585     }
2586     CLHEP::Hep3Vector translation( mytrans[0], mytrans[1], mytrans[2]);
2587     CLHEP::HepEulerAngles euler( myeuler[0], myeuler[1], myeuler[2]);
2588     AlignTransform transform( translation, euler, eedetId );
2589     my_align.push_back(transform);

http://cmslxr.fnal.gov/lxr/source/CondTools/Ecal/src/EcalDBCopy.cc

http://proj-clhep.web.cern.ch/proj-clhep/CLHEP_2_1_0_1/doxygen/html/classCLHEP_1_1HepEulerAngles.html

)

   
  to inspect DB do
    sqlite3 EBAlign_2010.db
    .tables
    select *from ALIGNME_M_ALIGN;
    .q


########################################################################################
############################ Rereco with new ECAL alignment ############################

4) run Re-Reco with new DB

cd EcalValidation/EcalAlignment/test/crab/
multicrab -create --cfg multicrab_new_tag.cfg

*** modify in multicrab_####_#### directory the file multicrab.cfg
*** and run
*** multicrab -status
*** or

multicrab -getoutput

multicrab -report

hadd EcalAlignmentNewJoin.root RawRecoRealign_New_Align/*/res/EcalAlignment_*

lumiCalc.py -c frontier://LumiProd/CMS_LUMI_PROD -i test/collision11.json recorded



#####################################################################################
############################ Sanity check and validation ############################

6) Sanity check

    r00t Alignment_Validation_EB.cxx\(\"EcalAlignmentJoin.root\",\"EcalAlignmentJoinMyAlign.root\"\)

    r00t Alignment_Validation_EE.cxx\(\"EcalAlignmentJoin.root\",\"EcalAlignmentJoinMyAlign.root\"\)



7) Compare different coefficients: draw dx, dy, dz, dpsi, dtheta, dphi for two different set of alignments coefficients
       r00t EB_Alignment_Draw.cxx
       r00t EE_Alignment_Draw.cxx
   For "EB" Survey comparison is hardcoded
   Useful before step (4) to test coefficients (not big changes from previous alignment!)











